{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyN810XvMA1oDT219/Kma4cK"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"eb5cc4f15220498c96b3ce02405fac6b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ec7e7b7c70e645e08499fd1c699e6f9b","IPY_MODEL_a851254f99574468ad53291e08858bb7","IPY_MODEL_8dbfc057dab244eda8d5140559242d95"],"layout":"IPY_MODEL_01f8749ed62f4af497e72bcf9de58877"}},"ec7e7b7c70e645e08499fd1c699e6f9b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_587de3e44e064cbf86ea0994811c3fae","placeholder":"​","style":"IPY_MODEL_b365e01a547f47cc8030ca9223587c38","value":"100%"}},"a851254f99574468ad53291e08858bb7":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_45fbad9518174d21af6a0564bc8b1b18","max":49997,"min":0,"orientation":"horizontal","style":"IPY_MODEL_95e92adb81744d3cad40987540c72c09","value":49997}},"8dbfc057dab244eda8d5140559242d95":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b102a88625ac4b63b0c8d882b61aafe4","placeholder":"​","style":"IPY_MODEL_67c3b93ba51b4242880141ecddd839eb","value":" 49997/49997 [14:07&lt;00:00, 66.21it/s]"}},"01f8749ed62f4af497e72bcf9de58877":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"587de3e44e064cbf86ea0994811c3fae":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b365e01a547f47cc8030ca9223587c38":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"45fbad9518174d21af6a0564bc8b1b18":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"95e92adb81744d3cad40987540c72c09":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b102a88625ac4b63b0c8d882b61aafe4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"67c3b93ba51b4242880141ecddd839eb":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"16a5c57b35c047d29c1d1e177c283598":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_eeda07ce65434b7b84e3e5e881596381","IPY_MODEL_b3517be6c99a40ea926636dd89a6b21c","IPY_MODEL_e12de8a8afd147c48cbd4c5d12cdcb9e"],"layout":"IPY_MODEL_3b25b9d126ae448ebf849fc0bfdb3fa9"}},"eeda07ce65434b7b84e3e5e881596381":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_642b19d36fa9416d8cefa0d21da55da0","placeholder":"​","style":"IPY_MODEL_6d2aee664941417994c89e3e677b8059","value":"100%"}},"b3517be6c99a40ea926636dd89a6b21c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_036c5f8bf0c74d2d8ad835c400491542","max":49997,"min":0,"orientation":"horizontal","style":"IPY_MODEL_bcfb7c18a3a34b39a50fa6bc0a48688b","value":49997}},"e12de8a8afd147c48cbd4c5d12cdcb9e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8b72ca5813814b54ae921776b3f6bf91","placeholder":"​","style":"IPY_MODEL_039d1a95f6fe4b6e8d0ac455278b3fc5","value":" 49997/49997 [14:17&lt;00:00, 66.70it/s]"}},"3b25b9d126ae448ebf849fc0bfdb3fa9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"642b19d36fa9416d8cefa0d21da55da0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6d2aee664941417994c89e3e677b8059":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"036c5f8bf0c74d2d8ad835c400491542":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bcfb7c18a3a34b39a50fa6bc0a48688b":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8b72ca5813814b54ae921776b3f6bf91":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"039d1a95f6fe4b6e8d0ac455278b3fc5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}},"gpuClass":"standard","accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["## KoELECTRA 사용\n","\n","- transformer 라이브러리에 포함되어 있음\n","\n"],"metadata":{"id":"MEJZSCGi8Wn1"}},{"cell_type":"code","source":["!pip install transformers tokenizers sentencepiece\n","\n","# NSMC\n","!git clone https://github.com/e9t/nsmc.git"],"metadata":{"id":"zB7gtwhz8WgQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 라이브러리"],"metadata":{"id":"cAI4Q0T683Nh"}},{"cell_type":"code","source":["import torch\n","from torch import nn\n","import torch.nn.functional as F\n","import torch.optim as optim\n","from torch.utils.data import Dataset, DataLoader\n","\n","import numpy as np\n","import pandas as pd\n","import re\n","from tqdm import tqdm, tqdm_notebook\n","\n","#transformers -> KoELECTRA 포함\n","from transformers import AdamW\n","from transformers import BertModel\n","from transformers.optimization import get_cosine_schedule_with_warmup\n","\n","# KoELECTRA\n","from transformers import ElectraForSequenceClassification, ElectraTokenizer"],"metadata":{"id":"sIIP1eTu8WeC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 데이터 읽기\n","train = pd.read_csv(\"./nsmc/ratings_train.txt\", sep='\\t')\n","test = pd.read_csv(\"./nsmc/ratings_test.txt\", sep='\\t')\n","\n","# 결측치 제거\n","train = train.dropna()\n","test = test.dropna()\n","print('train shape:',train.shape)\n","print('test shape:',test.shape)\n","print()\n","\n","# GPU 확인 및 사용\n","n_devices = torch.cuda.device_count()\n","print('device count:', n_devices)\n","print()\n","\n","# GPU 있으면 할당\n","device = torch.device(\"cuda:0\" if torch.cuda.is_available() else 'cpu')\n","\n","# Koelectra Model\n","electramodel = ElectraForSequenceClassification.from_pretrained(\"monologg/koelectra-base-v3-discriminator\")  # KoELECTRA-Small-v3\n","tokenizer = ElectraTokenizer.from_pretrained(\"monologg/koelectra-base-v3-discriminator\")\n","\n","print(electramodel)\n","print('-'*100)\n","print(\"Current device:\", device)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LVKOmcTX8WcG","executionInfo":{"status":"ok","timestamp":1684663201161,"user_tz":-540,"elapsed":4025,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"e44bc469-75f0-454b-c404-ff655f4b16a6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["train shape: (149995, 3)\n","test shape: (49997, 3)\n","\n","device count: 1\n","\n"]},{"output_type":"stream","name":"stderr","text":["Some weights of the model checkpoint at monologg/koelectra-base-v3-discriminator were not used when initializing ElectraForSequenceClassification: ['discriminator_predictions.dense_prediction.bias', 'discriminator_predictions.dense.bias', 'discriminator_predictions.dense.weight', 'discriminator_predictions.dense_prediction.weight']\n","- This IS expected if you are initializing ElectraForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing ElectraForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights of ElectraForSequenceClassification were not initialized from the model checkpoint at monologg/koelectra-base-v3-discriminator and are newly initialized: ['classifier.out_proj.bias', 'classifier.dense.weight', 'classifier.dense.bias', 'classifier.out_proj.weight']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]},{"output_type":"stream","name":"stdout","text":["ElectraForSequenceClassification(\n","  (electra): ElectraModel(\n","    (embeddings): ElectraEmbeddings(\n","      (word_embeddings): Embedding(35000, 768, padding_idx=0)\n","      (position_embeddings): Embedding(512, 768)\n","      (token_type_embeddings): Embedding(2, 768)\n","      (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n","      (dropout): Dropout(p=0.1, inplace=False)\n","    )\n","    (encoder): ElectraEncoder(\n","      (layer): ModuleList(\n","        (0-11): 12 x ElectraLayer(\n","          (attention): ElectraAttention(\n","            (self): ElectraSelfAttention(\n","              (query): Linear(in_features=768, out_features=768, bias=True)\n","              (key): Linear(in_features=768, out_features=768, bias=True)\n","              (value): Linear(in_features=768, out_features=768, bias=True)\n","              (dropout): Dropout(p=0.1, inplace=False)\n","            )\n","            (output): ElectraSelfOutput(\n","              (dense): Linear(in_features=768, out_features=768, bias=True)\n","              (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n","              (dropout): Dropout(p=0.1, inplace=False)\n","            )\n","          )\n","          (intermediate): ElectraIntermediate(\n","            (dense): Linear(in_features=768, out_features=3072, bias=True)\n","            (intermediate_act_fn): GELUActivation()\n","          )\n","          (output): ElectraOutput(\n","            (dense): Linear(in_features=3072, out_features=768, bias=True)\n","            (LayerNorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)\n","            (dropout): Dropout(p=0.1, inplace=False)\n","          )\n","        )\n","      )\n","    )\n","  )\n","  (classifier): ElectraClassificationHead(\n","    (dense): Linear(in_features=768, out_features=768, bias=True)\n","    (dropout): Dropout(p=0.1, inplace=False)\n","    (out_proj): Linear(in_features=768, out_features=2, bias=True)\n","  )\n",")\n","----------------------------------------------------------------------------------------------------\n","Current device: cuda:0\n"]}]},{"cell_type":"code","source":["display(train[:5])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"NU0tlAIA8WaY","executionInfo":{"status":"ok","timestamp":1684663201162,"user_tz":-540,"elapsed":12,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"bd86964e-5d8d-4c54-c206-cb48661fbf27"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["         id                                           document  label\n","0   9976970                                아 더빙.. 진짜 짜증나네요 목소리      0\n","1   3819312                  흠...포스터보고 초딩영화줄....오버연기조차 가볍지 않구나      1\n","2  10265843                                  너무재밓었다그래서보는것을추천한다      0\n","3   9045019                      교도소 이야기구먼 ..솔직히 재미는 없다..평점 조정      0\n","4   6483659  사이몬페그의 익살스런 연기가 돋보였던 영화!스파이더맨에서 늙어보이기만 했던 커스틴 ...      1"],"text/html":["\n","  <div id=\"df-ae77d8d3-367b-4572-8f49-e9176238d321\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>document</th>\n","      <th>label</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>9976970</td>\n","      <td>아 더빙.. 진짜 짜증나네요 목소리</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>3819312</td>\n","      <td>흠...포스터보고 초딩영화줄....오버연기조차 가볍지 않구나</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>10265843</td>\n","      <td>너무재밓었다그래서보는것을추천한다</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>9045019</td>\n","      <td>교도소 이야기구먼 ..솔직히 재미는 없다..평점 조정</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6483659</td>\n","      <td>사이몬페그의 익살스런 연기가 돋보였던 영화!스파이더맨에서 늙어보이기만 했던 커스틴 ...</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae77d8d3-367b-4572-8f49-e9176238d321')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ae77d8d3-367b-4572-8f49-e9176238d321 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ae77d8d3-367b-4572-8f49-e9176238d321');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}]},{"cell_type":"markdown","source":["## 데이터 전처리"],"metadata":{"id":"qEG1z5TQAlKd"}},{"cell_type":"code","source":["# DataFrame -> array\n","\n","dataset_train = []\n","for docu, label in zip(train.document, train.label):\n","  if '\"' in docu:\n","    docu = re.sub('\"', '', docu)\n","  dataset_train.append([docu, str(label)])\n","\n","dataset_test = []\n","for docu, label in zip(test.document, test.label):\n","  if '\"' in docu:\n","    docu = re.sub('\"', '', docu)\n","  dataset_test.append([docu, str(label)])\n","\n","\n","print(dataset_train[:3])\n","\n","dataset_train = np.array(dataset_train)\n","dataset_test = np.array(dataset_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-O3368pbAnEn","executionInfo":{"status":"ok","timestamp":1684663202059,"user_tz":-540,"elapsed":908,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"96f69b66-3dbf-4d8d-be90-b0797b2dd742"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['아 더빙.. 진짜 짜증나네요 목소리', '0'], ['흠...포스터보고 초딩영화줄....오버연기조차 가볍지 않구나', '1'], ['너무재밓었다그래서보는것을추천한다', '0']]\n"]}]},{"cell_type":"code","source":["class ElectraClassificationDataset(Dataset):\n","  def __init__(self, dataset, tokenizer, max_len):\n","    self.input_data = list(dataset[:, 0])\n","    self.label_data = list(dataset[:, 1])\n","    self.tokenizer = tokenizer\n","    self.max_len = max_len\n","\n","  def __len__(self):\n","    return len(self.label_data)\n","\n","  def __getitem__(self, idx):\n","    inputs = self.tokenizer(self.input_data[idx], \n","                            return_tensors='pt', \n","                            truncation=True, \n","                            max_length=self.max_len, \n","                            padding='max_length',\n","                            add_special_tokens=True)\n","    label = self.label_data[idx]\n","\n","    return {\n","        'input_ids': inputs['input_ids'][0],\n","        'attention_mask': inputs['attention_mask'][0],\n","        'token_type_ids': inputs['token_type_ids'][0],\n","        'label': int(label)\n","    }"],"metadata":{"id":"IOLcpJR6CZX6"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# 가장 긴 문장의 리뷰\n","max_len = 0\n","for i in train.document:\n","  if max_len < len(i):\n","    max_len = len(i)\n","  else:\n","    continue"],"metadata":{"id":"yt3YQ3wgDDVa"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train = ElectraClassificationDataset(dataset_train, tokenizer, max_len)\n","test = ElectraClassificationDataset(dataset_test, tokenizer, max_len)"],"metadata":{"id":"o9rTRtvoDcMu"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Torch 입력 데이터 형식으로 변환"],"metadata":{"id":"uqXu-A4CF9nL"}},{"cell_type":"code","source":["batch_size = 64\n","\n","train_dataloader = torch.utils.data.DataLoader(train, batch_size=batch_size)\n","test_dataloader = torch.utils.data.DataLoader(test, batch_size=batch_size)\n","\n","print(len(train_dataloader), len(test_dataloader)) # 각 Iteration의 수 (= len(data_train)/batch_size)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"d733GHuuE6AK","executionInfo":{"status":"ok","timestamp":1684663202549,"user_tz":-540,"elapsed":5,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"ff20ab4d-bead-4f79-9429-d718cda4fbf6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["2344 782\n"]}]},{"cell_type":"code","source":["for batch_id, data in enumerate(train_dataloader):\n","  print(data['input_ids'])\n","  print(data['attention_mask'])\n","  print(data['token_type_ids'])\n","  print(data['label'])\n","  break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8PeCg-wRGPLx","executionInfo":{"status":"ok","timestamp":1684663203213,"user_tz":-540,"elapsed":6,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"0b12152c-92bb-44c4-e892-487069a3f912"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tensor([[    2,  3079, 33345,  ...,     0,     0,     0],\n","        [    2,  3854,    18,  ...,     0,     0,     0],\n","        [    2,     1,     3,  ...,     0,     0,     0],\n","        ...,\n","        [    2,  2803,  4435,  ...,     0,     0,     0],\n","        [    2,  9711,  4418,  ...,     0,     0,     0],\n","        [    2,  2780,  4820,  ...,     0,     0,     0]])\n","tensor([[1, 1, 1,  ..., 0, 0, 0],\n","        [1, 1, 1,  ..., 0, 0, 0],\n","        [1, 1, 1,  ..., 0, 0, 0],\n","        ...,\n","        [1, 1, 1,  ..., 0, 0, 0],\n","        [1, 1, 1,  ..., 0, 0, 0],\n","        [1, 1, 1,  ..., 0, 0, 0]])\n","tensor([[0, 0, 0,  ..., 0, 0, 0],\n","        [0, 0, 0,  ..., 0, 0, 0],\n","        [0, 0, 0,  ..., 0, 0, 0],\n","        ...,\n","        [0, 0, 0,  ..., 0, 0, 0],\n","        [0, 0, 0,  ..., 0, 0, 0],\n","        [0, 0, 0,  ..., 0, 0, 0]])\n","tensor([0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1,\n","        0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0,\n","        0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 0])\n"]}]},{"cell_type":"markdown","source":["# KoELECTRA (분류 모델)"],"metadata":{"id":"7McSfHzhqiIR"}},{"cell_type":"code","source":["# Setting parameters\n","warmup_ratio = 0.1\n","num_epochs = 2 # test 용도 (램이 딸려서 중간에 끊김..)\n","max_grad_norm = 1\n","log_interval = 200\n","learning_rate =  4e-5"],"metadata":{"id":"znsqzX1trau1"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# optimizer와 schedule 설정\n","no_decay = ['bias', 'LayerNorm.weight']\n","optimizer_grouped_parameters = [\n","    {'params': [p for n, p in electramodel.named_parameters() if not any(nd in n for nd in no_decay)], 'weight_decay': 0.01},\n","    {'params': [p for n, p in electramodel.named_parameters() if any(nd in n for nd in no_decay)], 'weight_decay': 0.0}\n","]\n","\n","optimizer = AdamW(optimizer_grouped_parameters, lr=learning_rate)\n","loss_fn = nn.CrossEntropyLoss()\n","\n","t_total = len(train_dataloader) * num_epochs\n","warmup_step = int(t_total * warmup_ratio)\n","scheduler = get_cosine_schedule_with_warmup(optimizer, num_warmup_steps=warmup_step, num_training_steps=t_total)\n","\n","#정확도 측정을 위한 함수 정의\n","def calc_accuracy(X,Y):\n","    max_vals, max_indices = torch.max(X, 1)\n","    train_acc = (max_indices == Y).sum().data.cpu().numpy()/max_indices.size()[0]\n","    return train_acc"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vCgJlu5fqbzU","executionInfo":{"status":"ok","timestamp":1684663203213,"user_tz":-540,"elapsed":4,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"41c7a1fc-d10a-426f-a4f3-e784c5fcc545"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/transformers/optimization.py:407: FutureWarning: This implementation of AdamW is deprecated and will be removed in a future version. Use the PyTorch implementation torch.optim.AdamW instead, or set `no_deprecation_warning=True` to disable this warning\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["eval_acc = 0\n","for e in range(num_epochs):\n","  train_acc = 0.0\n","  test_acc = 0.0\n","\n","  electramodel.train()\n","  electramodel.to(device)\n","  for batch_id, data in enumerate(tqdm(train_dataloader)):\n","    optimizer.zero_grad()\n","    token_ids = data['input_ids'].long().to(device)\n","    token_type_ids = data['token_type_ids'].long().to(device)\n","    attention_mask = data['attention_mask'].long().to(device)\n","    label = data['label'].long().to(device) # 정답\n","\n","    out = electramodel(input_ids=token_ids, \n","                       token_type_ids=token_type_ids, \n","                       attention_mask=attention_mask)\n","\n","    out = nn.functional.softmax(out.logits, dim=1)\n","    # pred_label = softmax_out.argmax(dim=1)\n","\n","    loss = loss_fn(out, label)\n","    loss.backward()\n","    torch.nn.utils.clip_grad_norm_(electramodel.parameters(), max_grad_norm)\n","\n","    optimizer.step()\n","    scheduler.step() # Update learning rate schedule\n","    train_acc += calc_accuracy(out, label)\n","    if batch_id % log_interval == 0:\n","            print(\"epoch {} batch id {} loss {} train acc {}\".format(e+1, batch_id+1, loss.data.cpu().numpy(), train_acc / (batch_id+1)))\n","  print(\"epoch {} train acc {}\".format(e+1, train_acc / (batch_id+1)))\n","\n","  # 평가\n","  with torch.no_grad():\n","    electramodel.eval()\n","    for batch_id, data in enumerate(tqdm(test_dataloader)):\n","      token_ids = data['input_ids'].long().to(device)\n","      token_type_ids = data['token_type_ids'].long().to(device)\n","      attention_mask = data['attention_mask'].long().to(device)\n","      label = data['label'].long().to(device) # 정답\n","\n","      out = electramodel(input_ids=token_ids, \n","                       token_type_ids=token_type_ids, \n","                       attention_mask=attention_mask)\n","      \n","      out = nn.functional.softmax(out.logits, dim=1)\n","\n","      test_acc += calc_accuracy(out, label)\n","    \n","    total_test_acc = test_acc / (batch_id+1)\n","    print(\"epoch {} test acc {}\".format(e+1, total_test_acc))\n","\n","  # 모델 저장\n","  if eval_acc < total_test_acc:\n","    eval_acc = total_test_acc\n","    torch.save(electramodel.state_dict(), f'./model_state_dict_elec.pt')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HBu7OblxqbtD","executionInfo":{"status":"ok","timestamp":1684671040971,"user_tz":-540,"elapsed":7820563,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"286adf2d-9c39-403d-f746-c01be1f7cde2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["  0%|          | 1/2344 [00:02<1:25:50,  2.20s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 1 loss 0.692448079586029 train acc 0.484375\n"]},{"output_type":"stream","name":"stderr","text":["  9%|▊         | 201/2344 [04:58<52:49,  1.48s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 201 loss 0.4758091866970062 train acc 0.6646455223880597\n"]},{"output_type":"stream","name":"stderr","text":[" 17%|█▋        | 401/2344 [09:54<47:45,  1.47s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 401 loss 0.4124738574028015 train acc 0.7592347256857855\n"]},{"output_type":"stream","name":"stderr","text":[" 26%|██▌       | 601/2344 [14:49<42:47,  1.47s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 601 loss 0.42327067255973816 train acc 0.7950291181364393\n"]},{"output_type":"stream","name":"stderr","text":[" 34%|███▍      | 801/2344 [19:45<37:56,  1.48s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 801 loss 0.5720130205154419 train acc 0.8147823033707865\n"]},{"output_type":"stream","name":"stderr","text":[" 43%|████▎     | 1001/2344 [24:40<33:01,  1.48s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 1001 loss 0.44014307856559753 train acc 0.8247377622377622\n"]},{"output_type":"stream","name":"stderr","text":[" 51%|█████     | 1201/2344 [29:36<28:14,  1.48s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 1201 loss 0.43210065364837646 train acc 0.8332249167360533\n"]},{"output_type":"stream","name":"stderr","text":[" 60%|█████▉    | 1401/2344 [34:32<23:10,  1.47s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 1401 loss 0.45421871542930603 train acc 0.8396903997144897\n"]},{"output_type":"stream","name":"stderr","text":[" 68%|██████▊   | 1601/2344 [39:28<18:13,  1.47s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 1601 loss 0.44325241446495056 train acc 0.8445698001249219\n"]},{"output_type":"stream","name":"stderr","text":[" 77%|███████▋  | 1801/2344 [44:25<13:27,  1.49s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 1801 loss 0.4289895296096802 train acc 0.8491983620210994\n"]},{"output_type":"stream","name":"stderr","text":[" 85%|████████▌ | 2001/2344 [49:21<08:31,  1.49s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 2001 loss 0.4641399383544922 train acc 0.8531593578210894\n"]},{"output_type":"stream","name":"stderr","text":[" 94%|█████████▍| 2201/2344 [54:17<03:31,  1.48s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 1 batch id 2201 loss 0.42596235871315 train acc 0.8568974329850069\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 2344/2344 [57:48<00:00,  1.48s/it]\n"]},{"output_type":"stream","name":"stdout","text":["epoch 1 train acc 0.8595955966247322\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 782/782 [07:15<00:00,  1.80it/s]\n"]},{"output_type":"stream","name":"stdout","text":["epoch 1 test acc 0.8946227006688963\n"]},{"output_type":"stream","name":"stderr","text":["  0%|          | 1/2344 [00:01<57:25,  1.47s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 1 loss 0.4924255311489105 train acc 0.8125\n"]},{"output_type":"stream","name":"stderr","text":["  9%|▊         | 201/2344 [04:57<53:03,  1.49s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 201 loss 0.4000617265701294 train acc 0.894589552238806\n"]},{"output_type":"stream","name":"stderr","text":[" 17%|█▋        | 401/2344 [09:53<47:52,  1.48s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 401 loss 0.409972220659256 train acc 0.9003662718204489\n"]},{"output_type":"stream","name":"stderr","text":[" 26%|██▌       | 601/2344 [14:49<42:49,  1.47s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 601 loss 0.4087600111961365 train acc 0.9051580698835274\n"]},{"output_type":"stream","name":"stderr","text":[" 34%|███▍      | 801/2344 [19:45<37:50,  1.47s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 801 loss 0.4656708836555481 train acc 0.9066011235955056\n"]},{"output_type":"stream","name":"stderr","text":[" 43%|████▎     | 1001/2344 [24:42<33:09,  1.48s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 1001 loss 0.41431260108947754 train acc 0.906889985014985\n"]},{"output_type":"stream","name":"stderr","text":[" 51%|█████     | 1201/2344 [29:37<28:18,  1.49s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 1201 loss 0.3901453912258148 train acc 0.9085397585345545\n"]},{"output_type":"stream","name":"stderr","text":[" 60%|█████▉    | 1401/2344 [34:34<23:09,  1.47s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 1401 loss 0.41398924589157104 train acc 0.9097185046395432\n"]},{"output_type":"stream","name":"stderr","text":[" 68%|██████▊   | 1601/2344 [39:30<18:17,  1.48s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 1601 loss 0.43427154421806335 train acc 0.9107686602123672\n"]},{"output_type":"stream","name":"stderr","text":[" 77%|███████▋  | 1801/2344 [44:26<13:19,  1.47s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 1801 loss 0.39850524067878723 train acc 0.9119499583564686\n"]},{"output_type":"stream","name":"stderr","text":[" 85%|████████▌ | 2001/2344 [49:22<08:29,  1.49s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 2001 loss 0.3849884867668152 train acc 0.9128951149425287\n"]},{"output_type":"stream","name":"stderr","text":[" 94%|█████████▍| 2201/2344 [54:18<03:33,  1.49s/it]"]},{"output_type":"stream","name":"stdout","text":["epoch 2 batch id 2201 loss 0.3774271607398987 train acc 0.9139595638346206\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 2344/2344 [57:49<00:00,  1.48s/it]\n"]},{"output_type":"stream","name":"stdout","text":["epoch 2 train acc 0.9146529796511627\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 782/782 [07:15<00:00,  1.80it/s]\n"]},{"output_type":"stream","name":"stdout","text":["epoch 2 test acc 0.904451726342711\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"b5HmZla9vf_2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"wgwPowgTqbm1"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["----"],"metadata":{"id":"07og3FrGqaSu"}},{"cell_type":"markdown","source":["# Test데이터 예측 (Fine tuning 전)"],"metadata":{"id":"2b_FqDTCeQM9"}},{"cell_type":"code","source":["test = pd.read_csv(\"./nsmc/ratings_test.txt\", sep='\\t')\n","test = test.dropna()"],"metadata":{"id":"E1nFd-MbnIte"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["test_dataloader = torch.utils.data.DataLoader(test, batch_size=1)"],"metadata":{"id":"y0G6w3L9fh1i"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["with torch.no_grad():\n","  electramodel.eval()\n","\n","  y_pred = []\n","  for data in tqdm_notebook(test_dataloader):\n","    token_ids = data['input_ids'].long().to(device)\n","    token_type_ids = data['token_type_ids'].long().to(device)\n","    attention_mask = data['attention_mask'].long().to(device)\n","\n","    electramodel.to(device)\n","    out = electramodel(input_ids=token_ids, \n","                       token_type_ids=token_type_ids, \n","                       attention_mask=attention_mask)\n","    \n","    softmax_out = nn.functional.softmax(out.logits, dim=1)\n","    pred_label = softmax_out.argmax(dim=1).item()\n","\n","    y_pred.append(pred_label)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":123,"referenced_widgets":["eb5cc4f15220498c96b3ce02405fac6b","ec7e7b7c70e645e08499fd1c699e6f9b","a851254f99574468ad53291e08858bb7","8dbfc057dab244eda8d5140559242d95","01f8749ed62f4af497e72bcf9de58877","587de3e44e064cbf86ea0994811c3fae","b365e01a547f47cc8030ca9223587c38","45fbad9518174d21af6a0564bc8b1b18","95e92adb81744d3cad40987540c72c09","b102a88625ac4b63b0c8d882b61aafe4","67c3b93ba51b4242880141ecddd839eb"]},"id":"AHqlmP8reW46","executionInfo":{"status":"ok","timestamp":1684660287780,"user_tz":-540,"elapsed":847608,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"96ff673e-31b5-4092-d739-e86f01fdefa6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-15-ea4a32dec8c6>:5: TqdmDeprecationWarning: This function will be removed in tqdm==5.0.0\n","Please use `tqdm.notebook.tqdm` instead of `tqdm.tqdm_notebook`\n","  for data in tqdm_notebook(test_dataloader):\n"]},{"output_type":"display_data","data":{"text/plain":["  0%|          | 0/49997 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"eb5cc4f15220498c96b3ce02405fac6b"}},"metadata":{}}]},{"cell_type":"code","source":["test['pred'] = y_pred\n","\n","# 정확도\n","from sklearn.metrics import accuracy_score\n","accuracy_score(list(test.label), list(test.pred)) * 100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6nJvHM0eeW2T","executionInfo":{"status":"ok","timestamp":1684660937680,"user_tz":-540,"elapsed":4,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"11716f3d-9457-4c09-e8d7-79980371d44c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["49.81898913934836"]},"metadata":{},"execution_count":23}]},{"cell_type":"markdown","source":["----"],"metadata":{"id":"EWEekhGWhWAJ"}},{"cell_type":"markdown","source":["# 모델 Fine tuning 후 테스트"],"metadata":{"id":"S0Utr6b-Q_No"}},{"cell_type":"code","source":["batch_size=1\n","\n","test_dataloader = torch.utils.data.DataLoader(test, batch_size=batch_size)"],"metadata":{"id":"i5GtVN2nRvS3"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["len(test_dataloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_bpiVrDWR451","executionInfo":{"status":"ok","timestamp":1684672064543,"user_tz":-540,"elapsed":2,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"89f7727e-3433-4934-acce-68d2e8719fbf"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["49997"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["with torch.no_grad():\n","  electramodel.eval()\n","\n","  y_pred = []\n","  for data in tqdm_notebook(test_dataloader):\n","    token_ids = data['input_ids'].long().to(device)\n","    token_type_ids = data['token_type_ids'].long().to(device)\n","    attention_mask = data['attention_mask'].long().to(device)\n","\n","    electramodel.to(device)\n","    out = electramodel(input_ids=token_ids, \n","                       token_type_ids=token_type_ids, \n","                       attention_mask=attention_mask)\n","    \n","    softmax_out = nn.functional.softmax(out.logits, dim=1)\n","    pred_label = softmax_out.argmax(dim=1).item()\n","\n","    y_pred.append(pred_label)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":123,"referenced_widgets":["16a5c57b35c047d29c1d1e177c283598","eeda07ce65434b7b84e3e5e881596381","b3517be6c99a40ea926636dd89a6b21c","e12de8a8afd147c48cbd4c5d12cdcb9e","3b25b9d126ae448ebf849fc0bfdb3fa9","642b19d36fa9416d8cefa0d21da55da0","6d2aee664941417994c89e3e677b8059","036c5f8bf0c74d2d8ad835c400491542","bcfb7c18a3a34b39a50fa6bc0a48688b","8b72ca5813814b54ae921776b3f6bf91","039d1a95f6fe4b6e8d0ac455278b3fc5"]},"id":"KY-xa5oAh1Sr","executionInfo":{"status":"ok","timestamp":1684672965709,"user_tz":-540,"elapsed":857921,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"a17d82ac-d144-4427-dbf6-778c87f0883d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-26-ea4a32dec8c6>:5: TqdmDeprecationWarning: This function will be removed in tqdm==5.0.0\n","Please use `tqdm.notebook.tqdm` instead of `tqdm.tqdm_notebook`\n","  for data in tqdm_notebook(test_dataloader):\n"]},{"output_type":"display_data","data":{"text/plain":["  0%|          | 0/49997 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"16a5c57b35c047d29c1d1e177c283598"}},"metadata":{}}]},{"cell_type":"code","source":["# 데이터 읽기\n","test = pd.read_csv(\"./nsmc/ratings_test.txt\", sep='\\t')\n","\n","# 결측치 제거\n","test = test.dropna()\n","\n","test['pred'] = y_pred\n","\n","# 정확도\n","from sklearn.metrics import accuracy_score\n","accuracy_score(list(test.label), list(test.pred)) * 100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rP4HkzWTh1N2","executionInfo":{"status":"ok","timestamp":1684673399145,"user_tz":-540,"elapsed":1459,"user":{"displayName":"David Kim","userId":"08045787072475879019"}},"outputId":"d9928db9-7ce3-447e-b17f-b4592c8743f2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["90.43542612556753"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":[],"metadata":{"id":"tQfDhi_1h1MC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"SMLjSIsdh1Ke"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"oLVdjYGBh1I5"},"execution_count":null,"outputs":[]}]}